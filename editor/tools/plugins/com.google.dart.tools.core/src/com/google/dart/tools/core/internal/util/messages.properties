convention_fieldName_dollar = By convention, field names usually don't contain the $ character
convention_fieldName_empty = Field name must not be empty
convention_fieldName_notLowercase = By convention, field names usually start with a lowercase letter
convention_fieldName_initialChar = The field name ''{0}'' is not a valid identifier
convention_fieldName_internalChar = The field name ''{0}'' is not a valid identifier
convention_fieldName_leadingOrTrailingBlanks = A field name must not start or end with a blank
convention_fieldName_null = Field name must not be null
convention_fieldName_underscore = By convention, field names usually don't contain the underscore character

convention_functionName_dollar = By convention, function names usually don't contain the $ character
convention_functionName_empty = Function name must not be empty
convention_functionName_notLowercase = By convention, function names usually start with a lowercase letter
convention_functionName_initialChar = The function name ''{0}'' is not valid, must start with a letter, ''$'' or ''_''
convention_functionName_internalChar = The function name ''{0}'' is not valid, must be composed of letters, digits, ''$'' or ''_''
convention_functionName_leadingOrTrailingBlanks = A function name must not start or end with a blank
convention_functionName_null = Function name must not be null
convention_functionName_underscore = By convention, function names usually don't contain the underscore character

convention_functionTypeAliasName_dollar = By convention, function type alias names usually don't contain the $ character
convention_functionTypeAliasName_empty = Function type alias name must not be empty
convention_functionTypeAliasName_notLowercase = By convention, function type alias names usually start with an uppercase letter
convention_functionTypeAliasName_initialChar = The function type alias name ''{0}'' is not valid, must start with a letter, ''$'' or ''_''
convention_functionTypeAliasName_internalChar = The function type alias name ''{0}'' is not valid, must be composed of letters, digits, ''$'' or ''_''
convention_functionTypeAliasName_leadingOrTrailingBlanks = A function type alias name must not start or end with a blank
convention_functionTypeAliasName_null = Function type alias name must not be null
convention_functionTypeAliasName_underscore = By convention, function type alias names usually don't contain the underscore character

convention_classTypeAliasName_dollar = By convention, class names usually don't contain the $ character
convention_classTypeAliasName_empty = Class name must not be empty
convention_classTypeAliasName_notLowercase = By convention, class names usually start with an uppercase letter
convention_classTypeAliasName_initialChar = The class name ''{0}'' is not valid, must start with a letter, ''$'' or ''_''
convention_classTypeAliasName_internalChar = The class name ''{0}'' is not valid, must be composed of letters, digits, ''$'' or ''_''
convention_classTypeAliasName_leadingOrTrailingBlanks = A class name must not start or end with a blank
convention_classTypeAliasName_null = Class name must not be null
convention_classTypeAliasName_underscore = By convention, class names usually don't contain the underscore character

convention_methodName_dollar = By convention, library names usually don't contain the $ character
convention_methodName_empty = Method name must not be empty
convention_methodName_notLowercase = By convention, method names usually start with a lowercase letter
convention_methodName_initialChar = The method name ''{0}'' is not a valid identifier
convention_methodName_internalChar = The method name ''{0}'' is not a valid identifier
convention_methodName_leadingOrTrailingBlanks = A method name must not start or end with a blank
convention_methodName_null = Method name must not be null
convention_methodName_underscore = By convention, method names usually don't contain the underscore character

convention_parameterName_dollar = By convention, parameter names usually don't contain the $ character
convention_parameterName_empty = Parameter name must not be empty
convention_parameterName_notLowercase = By convention, parameter names usually start with a lowercase letter
convention_parameterName_initialChar = The parameter name ''{0}'' is not a valid identifier
convention_parameterName_internalChar = The parameter name ''{0}'' is not a valid identifier
convention_parameterName_leadingOrTrailingBlanks = A parameter name must not start or end with a blank
convention_parameterName_null = Parameter name must not be null
convention_parameterName_underscore = By convention, parameter names usually don't contain the underscore character
convention_prefix_empty = Prefix must not be empty
convention_prefix_initialChar = The prefix ''{0}'' is not a valid identifier
convention_prefix_internalChar = The prefix ''{0}'' is not a valid identifier
convention_prefix_leadingOrTrailingBlanks = A prefix must not start or end with a blank
convention_prefix_null = Prefix must not be null

convention_typeName_dollar = By convention, type names usually don't contain the $ character
convention_typeName_empty = Type name must not be empty
convention_typeName_initialChar = The type name ''{0}'' is not a valid identifier
convention_typeName_internalChar = The type name ''{0}'' is not a valid identifier
convention_typeName_leadingOrTrailingBlanks = A type name must not start or end with a blank
convention_typeName_notUppercase = By convention, type names usually start with an uppercase letter
convention_typeName_null = Type name must not be null

convention_typeParameterName_dollar = By convention, type parameter names usually don't contain the $ character
convention_typeParameterName_empty = Type parameter name must not be empty
convention_typeParameterName_initialChar = The type parameter name ''{0}'' is not a valid identifier
convention_typeParameterName_internalChar = The type parameter name ''{0}'' is not a valid identifier
convention_typeParameterName_leadingOrTrailingBlanks = A type parameter name must not start or end with a blank
convention_typeParameterName_notUppercase = By convention, type parameter names usually start with an uppercase letter
convention_typeParameterName_null = Type parameter name must not be null

convention_unitName_empty = Compilation unit name must not be empty
convention_unitName_initialChar = The compilation unit name ''{0}'' is not a valid identifier
convention_unitName_internalChar = The compilation unit name ''{0}'' is not a valid identifier
convention_unitName_leadingOrTrailingBlanks = A compilation unit name must not start or end with a blank
convention_unitName_notDartName = A compilation unit file's name must have the suffix "dart"
convention_unitName_null = Compilation unit name must not be null
convention_variableName_dollar = By convention, variable names usually don't contain the $ character
convention_variableName_empty = Variable name must not be empty
convention_variableName_notLowercase = By convention, variable names usually start with a lowercase letter
convention_variableName_initialChar = The variable name ''{0}'' is not a valid identifier
convention_variableName_internalChar = The variable name ''{0}'' is not a valid identifier
convention_variableName_leadingOrTrailingBlanks = A variable name must not start or end with a blank
convention_variableName_null = Variable name must not be null
convention_variableName_underscore = By convention, variable names usually don't contain the underscore character

correction_nullRequestor = Requestor cannot be null
correction_nullUnit = Compilation unit cannot be null

buffer_closed = Buffer is closed
element_nullName = Name cannot be null
engine_searching = Searching...
engine_searching_indexing = Looking through {0} indexes...
engine_searching_matching = Locating {0} matches...
engine_completing = Computing proposals...
code_assist_internal_error=Code assist internal error
file_notFound = File not found: ''{0}''
path_nullPath = Path cannot be null
savedState_jobName = Processing Dart changes since last activation

hierarchy_creating = Creating type hierarchy...
hierarchy_creatingOnType = Creating type hierarchy on {0}...

operation_cancelled = Operation cancelled
operation_copyElementProgress = Copying elements...
operation_copyResourceProgress = Copying resources...
operation_createFieldProgress = Creating a field...
operation_createMethodProgress = Creating a method...
operation_createTypeProgress = Creating a type...
operation_createUnitProgress = Creating a compilation unit...
operation_deleteElementProgress = Deleting elements...
operation_deleteResourceProgress = Deleting resources...
operation_moveElementProgress = Moving elements...
operation_moveResourceProgress = Moving resources...
operation_nullContainer = Container cannot be null
operation_nullName = Name cannot be null
operation_reconcilingWorkingCopy = Reconciling working copy...
operation_renameElementProgress = Renaming elements...
operation_renameResourceProgress = Renaming resources...
operation_workingCopy_commit = Committing working copy...

change_library_has_no_file= Library ''{0}'' does not have an underlying file.

### problem
problem_noSourceInformation =
problem_atLine = (at line {0})

status_nameCollision = {0} already exists in target